{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/newpresentation/newpresentation.component.css","./src/app/newpresentation/newpresentation.component.html","./src/app/newpresentation/newpresentation.component.ts","./src/app/newproof/newproof.component.css","./src/app/newproof/newproof.component.html","./src/app/newproof/newproof.component.ts","./src/app/newuser/newuser.component.css","./src/app/newuser/newuser.component.html","./src/app/newuser/newuser.component.ts","./src/app/presentation/presentation.component.css","./src/app/presentation/presentation.component.html","./src/app/presentation/presentation.component.ts","./src/app/presentations.service.ts","./src/app/proof-list/proof-list.component.css","./src/app/proof-list/proof-list.component.html","./src/app/proof-list/proof-list.component.ts","./src/app/proof/proof.component.css","./src/app/proof/proof.component.html","./src/app/proof/proof.component.ts","./src/app/proofs.service.ts","./src/app/user-list/user-list.component.css","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.ts","./src/app/user/user.component.css","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/userdashboard/userdashboard.component.css","./src/app/userdashboard/userdashboard.component.html","./src/app/userdashboard/userdashboard.component.ts","./src/app/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>\\n        {{coursename}}\\n    </h1>\\n</div>\\n\\n<div class=\\\"container\\\">\\n   <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  \n    constructor() {}\n\n    coursename = \"Math 23A\";\n\n    ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ProofListComponent } from './proof-list/proof-list.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { ProofComponent } from './proof/proof.component';\nimport { UserComponent } from './user/user.component';\nimport { NewProofComponent } from './newproof/newproof.component';\nimport { NewUserComponent } from './newuser/newuser.component';\nimport { UserDashboardComponent } from './userdashboard/userdashboard.component';\nimport { PresentationComponent } from './presentation/presentation.component';\nimport { NewPresentationComponent } from './newpresentation/newpresentation.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/users', pathMatch: 'full'},\n  { path: 'proofs', component: ProofListComponent },\n  { path: 'users', component: UserListComponent },\n  { path: 'users/:id', component: UserDashboardComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProofComponent,\n    UserComponent,\n    ProofListComponent,\n    UserListComponent,\n    NewProofComponent,\n    NewUserComponent,\n    UserDashboardComponent,\n    PresentationComponent,\n    NewPresentationComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(\n      routes\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newpresentation/newpresentation.component.css\n// module id = ./src/app/newpresentation/newpresentation.component.css\n// module chunks = main","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form)\\\">\\n\\n    <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n        <label for=\\\"proofField\\\">Proof:</label>\\n        <select name=\\\"proofField\\\" [(ngModel)]=\\\"newPresentation.proofID\\\">\\n          <option *ngFor=\\\"let p of proofs\\\" [ngValue]=\\\"p._id\\\">\\n            {{p.name}}\\n          </option>\\n        </select>\\n    </div>\\n\\n    <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n        <label for=\\\"nameField\\\">Presented To:</label>\\n        <select name=\\\"nameField\\\" [(ngModel)]=\\\"newPresentation.listenerID\\\">\\n          <option *ngFor=\\\"let ql of qualifiedListeners\\\" [ngValue]=\\\"ql._id\\\">\\n            {{ql.email}}\\n          </option>\\n        </select>\\n    </div>\\n\\n\\n    <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n        <button type=\\\"submit\\\">\\n          Save\\n        </button>\\n        <button (click)=\\\"cancelNew(form)\\\">Cancel</button>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newpresentation/newpresentation.component.html\n// module id = ./src/app/newpresentation/newpresentation.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProofService } from '../proofs.service';\nimport { PresentationService } from '../presentations.service';\n\n@Component({\n  selector: 'app-newpresentation',\n  templateUrl: './newpresentation.component.html',\n  styleUrls: ['./newpresentation.component.css'],\n  providers: [ProofService, PresentationService]\n})\nexport class NewPresentationComponent implements OnInit {\n  @Input() user:any;\n  @Input() proofs:any;\n  @Input() qualifiedListeners:any;\n\n  // When a new presentation is created, send event to parent to refresh list\n  @Output() newPres = new EventEmitter();\n  @Output() cancelNewPres = new EventEmitter();\n\n  // chosen via newPresentation form dropdowns\n  selectedProof:any;\n  selectedListener:any;\n\n  // bound to newPresentation form fields\n  newPresentation:any;\n\n  constructor(private proofService:ProofService,\n              private presentationService:PresentationService) { }\n\n  ngOnInit() {\n    // log the provided userID as the presenter\n    this.newPresentation = {'presenterID' : this.user._id };\n  }\n\n  // html form triggers this event via submit\n  save(form) : void {\n\n      if(this.newPresentation.listenerID && this.newPresentation.proofID) {\n\n          // add presentation, then notify parent of updated list\n          this.presentationService\n              .addPresentation(this.newPresentation.presenterID,\n                              this.newPresentation.listenerID,\n                              this.newPresentation.proofID)\n              .subscribe( (pres) => {\n                  this.newPres.emit();\n                  form.reset();\n              });\n      }\n  }\n\n  // html form triggers this event via Cancel button\n  cancelNew(form) : void {\n      this.cancelNewPres.emit();\n      form.reset();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/newpresentation/newpresentation.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newproof/newproof.component.css\n// module id = ./src/app/newproof/newproof.component.css\n// module chunks = main","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form)\\\">\\n    <div style=\\\"display: inline-block; \\n                vertical-align: top; padding: 1em;\\\">            \\n        <button type=\\\"submit\\\">Save</button>\\n        <button (click)=\\\"cancelNew(form)\\\">Cancel</button>\\n    </div>\\n\\n    <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n      <div>\\n        <label for=\\\"nameField\\\">Name:</label>\\n        <input name=\\\"nameField\\\" [(ngModel)]=\\\"proof.name\\\">\\n      </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newproof/newproof.component.html\n// module id = ./src/app/newproof/newproof.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ProofService } from '../proofs.service';\n\n@Component({\n  selector: 'app-newproof',\n  templateUrl: './newproof.component.html',\n  styleUrls: ['./newproof.component.css'],\n  providers: [ProofService]\n})\n\nexport class NewProofComponent implements OnInit {\n\n  // When a new proof is created, send event to parent to refresh list\n  @Output() newProof = new EventEmitter();\n  @Output() cancelNewProof = new EventEmitter();\n\n  // proof object, bound to the form fields\n  proof:any = {};\n\n  constructor(private proofService:ProofService) {}\n\n  ngOnInit() {}\n\n  // html form triggers this event via submit\n  save(form) : void {\n\n      // add proof, then notify parent of updated list\n      this.proofService.addProof(this.proof.name)\n          .subscribe( (proof) => {\n              this.newProof.emit();\n              form.reset();\n          });\n  }\n\n  // html form triggers this event via Cancel button\n  cancelNew(form) : void {\n      this.cancelNewProof.emit();\n      form.reset();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/newproof/newproof.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newuser/newuser.component.css\n// module id = ./src/app/newuser/newuser.component.css\n// module chunks = main","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form)\\\">\\n    <div style=\\\"display: inline-block; \\n                vertical-align: top; padding: 1em;\\\">            \\n        <button type=\\\"submit\\\">Save</button>\\n        <button (click)=\\\"cancelNewUser(form)\\\">Cancel</button>\\n    </div>\\n\\n    <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n      <div>\\n        <label for=\\\"statusField\\\">Status:</label>\\n        <input name=\\\"statusField\\\" placeholder=\\\"Head, TA, or Student\\\" [(ngModel)]=\\\"user.status\\\">\\n      </div>\\n      <div>\\n        <label for=\\\"emailField\\\">Email:</label>\\n        <input name=\\\"emailField\\\"  [(ngModel)]=\\\"user.email\\\">\\n      </div>\\n    </div>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newuser/newuser.component.html\n// module id = ./src/app/newuser/newuser.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { UserService } from '../users.service';\n\n@Component({\n  selector: 'app-newuser',\n  templateUrl: './newuser.component.html',\n  styleUrls: ['./newuser.component.css'],\n  providers: [UserService]\n})\n\nexport class NewUserComponent implements OnInit {\n\n  // When a new user is created, send event to parent to refresh list\n  @Output() newUser = new EventEmitter();\n  @Output() cancelNewUserEv = new EventEmitter();\n\n  // user object, bound to the form fields\n  user:any = {}\n\n  constructor(private userService:UserService) { }\n\n  ngOnInit() {}\n\n  // newuser html form triggers this event via submit\n  save(form) : void {\n\n      // add user, then notify parent of updated list\n      this.userService.addUser(this.user.email, this.user.status)\n          .subscribe((user)=>{\n            this.newUser.emit();\n            form.reset();\n        });\n  }\n\n  // html form triggers this event via Cancel button\n  cancelNewUser(form) : void {\n      this.cancelNewUserEv.emit();\n      form.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/newuser/newuser.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/presentation/presentation.component.css\n// module id = ./src/app/presentation/presentation.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"mode == 'listened_pending'\\\">\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">  \\n    <button (click)=\\\"confirmListened('confirmed')\\\">Confirm</button>\\n    <button (click)=\\\"confirmListened('denied')\\\">Deny</button>\\n  </div>\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">\\n    {{presentation.presenter.email}}, {{presentation.proof.name}}  <i>({{presentation.date_presented.substring(0, 10)}})</i>\\n  </div>\\n  <br>\\n</div>\\n\\n<div *ngIf=\\\"mode == 'presented_denied'\\\">\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">  \\n    <button (click)=\\\"delete()\\\">Delete</button>\\n  </div>\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">\\n    {{presentation.proof.name}} presented to {{presentation.listener.email}} <i>({{presentation.date_presented.substring(0, 10)}})</i><br>\\n  </div>\\n  <br>\\n</div>\\n\\n<div *ngIf=\\\"mode == 'presented_pending'\\\">\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">  \\n    <button (click)=\\\"delete()\\\">Delete</button>\\n  </div>\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">\\n  {{presentation.proof.name}} presented to {{presentation.listener.email}} <i>({{presentation.date_presented.substring(0, 10)}})</i>\\n  </div>\\n  <br>\\n</div>\\n\\n<div *ngIf=\\\"mode == 'presented_confirmed'\\\">\\n  <b>{{presentation.proof.name}}</b> to {{presentation.listener.email}} <i>({{presentation.date_presented.substring(0, 10)}})</i><br>\\n</div>\\n\\n<div *ngIf=\\\"mode == 'listened_confirmed'\\\">\\n  {{presentation.presenter.email}}, <b>{{presentation.proof.name}}</b>  <i>({{presentation.date_presented.substring(0, 10)}})</i><br>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/presentation/presentation.component.html\n// module id = ./src/app/presentation/presentation.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PresentationService } from '../presentations.service';\nimport { UserService } from '../users.service';\nimport { ProofService } from '../proofs.service';\n\n@Component({\n  selector: 'app-presentation',\n  templateUrl: './presentation.component.html',\n  styleUrls: ['./presentation.component.css'],\n  providers: [PresentationService, UserService, ProofService]\n})\nexport class PresentationComponent implements OnInit {\n\n  // from app-presentation tag userdashboard.component.html\n\n  // the current presentation\n  @Input() presentation:any; \n  // specifies presentation or listen, pending or confirmed.\n  @Input() mode:string; \n\n  // when a listening has been confirmed, will\n  // need to update both pending and confirmed lists\n  @Output() confirmed = new EventEmitter(); \n  @Output() deleted = new EventEmitter();\n\n  constructor(private presentationService:PresentationService,\n              private userService:UserService,\n              private proofService:ProofService) {\n  }\n\n  ngOnInit() {}\n\n  confirmListened(response) : void {\n    this.presentationService\n        .updatePresentation(this.presentation._id, response)\n        .subscribe((result)=>{\n          this.confirmed.emit();\n        });\n  }\n\n  delete() : void {\n    this.presentationService\n        .deletePresentation(this.presentation._id)\n        .subscribe((result)=>{\n          this.deleted.emit();\n        });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/presentation/presentation.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class PresentationService {\n\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http:HttpClient) {}\n\n    listPresentations() {\n        return this.http.get(this.apiUrl + \"/presentations\");\n    }\n\n    getPresentedPending(id:string) {\n        return this.http.get(this.apiUrl \n            + \"/presentations/presentedpending/user/\" + id);\n    }\n\n    getPresentedConfirmed(id:string) {\n        return this.http.get(this.apiUrl \n            + \"/presentations/presentedconfirmed/user/\" + id);\n    }\n\n    getPresentedDenied(id:string) {\n        return this.http.get(this.apiUrl \n            + \"/presentations/presenteddenied/user/\" + id);\n    }\n\n    getListenedPending(id:string) {\n        return this.http.get(this.apiUrl \n            + \"/presentations/listenedpending/user/\" + id);\n    }\n\n    getListenedConfirmed(id:string) {\n        return this.http.get(this.apiUrl \n            + \"/presentations/listenedconfirmed/user/\" + id);\n    }\n\n    getPresentation(id:string) {\n        return this.http.get(this.apiUrl + \"/presentations/\" + id);\n    }\n\n    addPresentation(presenterID:string, listenerID:string, \n                    proofID:string) {\n        return this.http.post(this.apiUrl + \"/presentations\", \n                    {'presenterID' : presenterID, \n                     'listenerID' : listenerID, \n                     'proofID' : proofID});\n    }\n\n    updatePresentation(id:string, status:string) {\n        return this.http.put(this.apiUrl + \"/presentations/\" + id,\n                    {'status': status });\n    }\n\n    deletePresentation(id:string) {\n        return this.http.delete(this.apiUrl + \"/presentations/\" + id);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/presentations.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/proof-list/proof-list.component.css\n// module id = ./src/app/proof-list/proof-list.component.css\n// module chunks = main","module.exports = \"<h2>Proof List</h2>\\n\\n<div *ngIf=\\\"numProofs; else noneTemplate\\\">\\n\\n    <app-proof *ngFor='let proofObj of proofList'\\n                [proof] = \\\"proofObj\\\"\\n                (deletedProof) = \\\"updateProofList()\\\">\\n    </app-proof>\\n\\n</div>\\n\\n<ng-template #noneTemplate>None</ng-template>\\n\\n<div *ngIf=\\\"!adding\\\">\\n    <button (click)=\\\"setAddingMode(true)\\\">Add New Proof</button>\\n</div>\\n\\n<div *ngIf=\\\"adding\\\">\\n    <app-newproof (newProof)=\\\"updateProofList()\\\"\\n                  (cancelNewProof)= \\\"setAddingMode(false)\\\">\\n    </app-newproof>\\n</div>\\n\\n<p><a routerLink=\\\"/users\\\">To Class List</a></p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/proof-list/proof-list.component.html\n// module id = ./src/app/proof-list/proof-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ProofService } from '../proofs.service';\n\n@Component({\n  selector: 'app-proof-list',\n  templateUrl: './proof-list.component.html',\n  styleUrls: ['./proof-list.component.css'],\n  providers: [ProofService]\n})\n\nexport class ProofListComponent implements OnInit {\n\n   constructor(private proofService:ProofService) {}\n\n    proofList = null;\n    numProofs = 0;\n    adding:boolean=false;\n\n    ngOnInit() {\n        this.updateProofList();\n    }\n\n    setAddingMode(mode):void{\n        this.adding = (mode ? true : false);\n    }\n\n    updateProofList():void {\n\n        this.proofService.listProofs().subscribe( \n            (proofs) => {\n                this.proofList = proofs;\n                this.proofList.sort( \n                    (a, b) => {\n                        if (a.name < b.name) {\n                            return -1;\n                        } else {\n                            return 1;\n                        }\n                });\n                this.numProofs = this.proofList.length;\n        });\n        this.setAddingMode(false);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/proof-list/proof-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/proof/proof.component.css\n// module id = ./src/app/proof/proof.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!editing\\\">\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n    <button (click)=\\\"setEditMode(true)\\\">Edit</button>\\n    <button (click)=\\\"deleteProof()\\\">Delete</button>\\n  </div>\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n    <b>{{ proof.name }}</b>\\n  </div>\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n      <div>{{ proof.qualifiedListeners.length }} listeners \\n        <span *ngIf=\\\"showListeners\\\">\\n          <button (click)=\\\"setShowListenersMode(false)\\\">Hide</button>\\n        </span>\\n        <span *ngIf=\\\"!showListeners\\\">\\n          <button (click)=\\\"setShowListenersMode(true)\\\">Show</button>\\n        </span>\\n      </div>\\n  </div>\\n  <div *ngIf=\\\"showListeners\\\" \\n        style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n      <div *ngFor=\\\"let ql of proof.qualifiedListeners\\\">\\n        <a routerLink=\\\"/users/{{ql._id}}\\\">{{ql.email}}</a>\\n        <span *ngIf=\\\"ql.availability\\\">\\n          availability: <i>{{ql.availability}}</i>\\n        </span>\\n      </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"editing\\\">\\n  <form #form=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">            \\n        <div><button (click)=\\\"updateProof(form.value)\\\">Save</button>\\n             <button (click)=\\\"setEditMode(false)\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div style=\\\"display: inline-block; vertical-align: top; padding: 1em;\\\">\\n          <label for=\\\"nameField\\\">Proof Name:</label>\\n          <input #name name=\\\"nameField\\\" [ngModel]=\\\"proof.name\\\">\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/proof/proof.component.html\n// module id = ./src/app/proof/proof.component.html\n// module chunks = main","import { Component, OnInit, Input,  Output, EventEmitter } from '@angular/core';\nimport { ProofService } from '../proofs.service';\n\n@Component({\n  selector: 'app-proof',\n  templateUrl: './proof.component.html',\n  styleUrls: ['./proof.component.css'],\n  providers: [ProofService]\n})\n\nexport class ProofComponent implements OnInit {\n\n    @Input() proof; // from app-user tag in app.component.html\n\n    // When a proof is deleted, send event to parent to refresh list\n    @Output() deletedProof = new EventEmitter();\n\n    editing:boolean=false;\n    showListeners:boolean= false;\n    listeners:any;\n\n    constructor(private proofService: ProofService) {}\n\n    ngOnInit() {\n        this.proof.qualifiedListeners.sort( (a, b) => {\n            if (a.email < b.email) {\n                return -1;\n            } else {\n                return 1;\n            }\n        });\n    }\n\n    setEditMode(mode):void{\n        this.editing = (mode ? true : false);\n    }\n\n    setShowListenersMode(mode):void{\n        this.showListeners = (mode ? true : false);\n    }\n\n    updateProof(obj:any):void {\n        this.proof.name = obj.nameField;\n        this.proofService.updateProof(this.proof._id, this.proof.name)\n      .     subscribe((result)=>{\n                this.setEditMode(false);\n            });\n    }\n\n    // deletes proof using ProofService, notifies parent component\n    deleteProof() {\n        this.proofService.deleteProof(this.proof._id)\n            .subscribe((result)=>{\n                this.deletedProof.emit();\n                this.setEditMode(false);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/proof/proof.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class ProofService {\n\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http:HttpClient) {}\n\n    listProofs() {\n        return this.http.get(this.apiUrl + \"/proofs\");\n    }\n\n    getProof(id:string) {\n        return this.http.get(this.apiUrl + \"/proofs/\" + id);\n    }\n\n    addProof(name:string) {\n        return this.http.post(this.apiUrl + \"/proofs\", \n                             {'proof': name});\n    }\n\n    updateProof(id:string, name:string) {\n        return this.http.put(this.apiUrl + \"/proofs/\" + id,\n                    {'id': id, 'proof': name });\n    }\n\n    deleteProof(id:string) {\n        return this.http.delete(this.apiUrl + \"/proofs/\" + id);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/proofs.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-list/user-list.component.css\n// module id = ./src/app/user-list/user-list.component.css\n// module chunks = main","module.exports = \"<h2>Class Members</h2>\\n\\n<div *ngIf=\\\"numUsers; else noneTemplate\\\">\\n\\n    <app-user *ngFor='let userObj of userList'\\n                [user] = \\\"userObj\\\"\\n                (deletedUser) = \\\"updateUserList()\\\">\\n    </app-user>\\n\\n</div>\\n\\n<ng-template #noneTemplate>None</ng-template>\\n\\n<div *ngIf=\\\"!adding\\\">\\n    <button (click)=\\\"setAddUserMode(true)\\\">Add New User</button>\\n</div>\\n\\n<div *ngIf=\\\"adding\\\">\\n    <app-newuser (newUser)=\\\"updateUserList()\\\"\\n                 (cancelNewUserEv)= \\\"setAddUserMode(false)\\\">\\n    </app-newuser>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-list/user-list.component.html\n// module id = ./src/app/user-list/user-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../users.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n  providers: [UserService]\n})\n\n\nexport class UserListComponent implements OnInit {\n\n    constructor(private userService:UserService) {}\n\n    userList = null;\n    numUsers = 0;\n    adding:boolean=false;\n\n    ngOnInit() {\n        this.updateUserList();\n    }\n\n    setAddUserMode(mode):void {\n        this.adding = (mode ? true : false);\n    }\n\n    updateUserList():void {\n        this.userService.listUsers().subscribe( \n            (users) => {\n                this.userList = users;\n                this.userList.sort( \n                    (a, b) => {\n                        if (a.status == b.status) {\n                            if (a.email.substring(0, a.email.lastIndexOf(\"@\")) < b.email.substring(0, b.email.lastIndexOf(\"@\"))) {\n                                return -1;\n                            } else {\n                                return 1;\n                            }\n                        } else if (a.status == \"Head\") {\n                                return -1;\n                        } else if (b.status == \"Head\") {\n                                return 1;\n                        } else if (a.status == \"TA\") {\n                                return -1;\n                        } else if (b.status == \"TA\") {\n                                return 1;\n                        }\n                });\n                this.numUsers = this.userList.length;\n            });\n        this.setAddUserMode(false);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-list/user-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user.component.css\n// module id = ./src/app/user/user.component.css\n// module chunks = main","module.exports = \"\\n<div *ngIf=\\\"!editing\\\">\\n\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">\\n    <button (click)=\\\"setEditMode(true)\\\">Edit</button>\\n    <button (click)=\\\"deleteUser()\\\">Delete</button>\\n  </div>\\n\\n  <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">\\n    <div>{{ user.status }}</div>\\n    <div><b><a routerLink=\\\"/users/{{user._id}}\\\">{{ user.email }}</a></b></div>\\n    <div>Availability: {{ user.availability }}</div>\\n  </div>\\n\\n</div>\\n\\n<div *ngIf=\\\"editing\\\">\\n  <form #form=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">            \\n        <div><button (click)=\\\"updateUser(form.value)\\\">Save</button>\\n              <button (click)=\\\"setEditMode(false)\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div style=\\\"display: inline-block; vertical-align: top; padding: .5em;\\\">\\n        <div>\\n          <label for=\\\"statusField\\\">Status:</label>\\n          <input #status name=\\\"statusField\\\" [ngModel]=\\\"user.status\\\">\\n        </div>\\n        <div>\\n          <label for=\\\"emailField\\\">Email:</label>\\n          <input #email name=\\\"emailField\\\" [ngModel]=\\\"user.email\\\">\\n        </div>\\n        <div>\\n          <label for=\\\"availabilityField\\\">Availability:</label>\\n          <input #availability name=\\\"availabilityField\\\" [ngModel]=\\\"user.availability\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user.component.html\n// module id = ./src/app/user/user.component.html\n// module chunks = main","import { Component, OnInit, Input,  Output, EventEmitter } from '@angular/core';\nimport { UserService } from '../users.service';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.css'],\n    providers: [UserService]\n\n})\n\nexport class UserComponent implements OnInit {\n\n    @Input() user; // from app-user tag in app.component.html\n\n    // When a user is deleted, send event to parent to refresh list\n    @Output() deletedUser = new EventEmitter();\n\n    editing:boolean=false;\n\n    constructor(private userService: UserService) {}\n\n    ngOnInit() {}\n\n    setEditMode(mode):void{\n        this.editing = (mode ? true : false);\n    }\n\n    updateUser(obj:any):void {\n        this.user.status = obj.statusField;\n        this.user.email = obj.emailField;\n        this.user.availability = obj.availabilityField;\n        this.userService.updateUser(this.user._id, this.user)\n      .     subscribe((result)=>{\n                this.setEditMode(false);\n            });\n    }\n\n    // deletes user using UserService, notifies parent component\n    deleteUser() {\n        this.userService.deleteUser(this.user._id)\n            .subscribe((result)=>{\n                this.deletedUser.emit();\n                this.setEditMode(false);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userdashboard/userdashboard.component.css\n// module id = ./src/app/userdashboard/userdashboard.component.css\n// module chunks = main","module.exports = \"<h2>Hello, {{ user.email }}</h2>\\n\\n<div *ngIf=\\\"user.status == 'Student'; else staffTemplate\\\">\\n    <h2>Your Proofs</h2>\\n    \\n    <h3>Register a newly presented proof</h3>\\n    \\n    <div *ngIf=\\\"!adding\\\">\\n        <button (click)=\\\"setAdding(true)\\\">Register New Presentation</button>\\n    </div>\\n    \\n    <div *ngIf=\\\"adding\\\">\\n        <app-newpresentation [user]=\\\"user\\\" \\n                             [proofs]=\\\"proofs\\\"\\n                             [qualifiedListeners]=\\\"staff\\\"\\n                            (newPres)=\\\"updatePresented()\\\"\\n                            (cancelNewPres)= \\\"setAdding(false)\\\">\\n        </app-newpresentation>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"num_listened_pending\\\">\\n    <h3>Confirm listening</h3>\\n\\n    <app-presentation *ngFor='let presObj of listened_pending'\\n                [presentation] = \\\"presObj\\\"\\n                mode = \\\"listened_pending\\\" \\n                (confirmed)=\\\"updateListened()\\\">\\n    </app-presentation>\\n\\n</div>\\n\\n<div *ngIf=\\\"user.status == 'Student'\\\">\\n\\n    <div *ngIf=\\\"num_presented_denied\\\">\\n        <h3>Denied Credit</h3>\\n        <app-presentation *ngFor='let presObj of presented_denied'\\n                    [presentation] = \\\"presObj\\\"\\n                    mode = \\\"presented_denied\\\"\\n                    (deleted)=\\\"updatePresentedDenied()\\\">\\n        </app-presentation>\\n    \\n    </div>\\n\\n    <div *ngIf=\\\"num_presented_pending\\\">\\n        <h3>Presented <i>(pending confirmation)</i></h3>\\n    \\n        <app-presentation *ngFor='let presObj of presented_pending'\\n                    [presentation] = \\\"presObj\\\"\\n                    mode = \\\"presented_pending\\\"\\n                    (deleted)=\\\"updatePresentedPending()\\\">\\n        </app-presentation>\\n    \\n    </div>\\n    \\n    <h3>Presented</h3>\\n    <div *ngIf=\\\"num_presented_confirmed; else noneTemplate\\\">\\n    \\n        <app-presentation *ngFor='let presObj of presented_confirmed'\\n                    [presentation] = \\\"presObj\\\"\\n                    mode = \\\"presented_confirmed\\\">\\n        </app-presentation>\\n    \\n    </div>\\n</div>\\n\\n<h3>Listened to</h3>\\n<div *ngIf=\\\"num_listened_confirmed; else noneTemplate\\\">\\n\\n    <app-presentation *ngFor='let presObj of listened_confirmed'\\n                [presentation] = \\\"presObj\\\"\\n                mode = \\\"listened_confirmed\\\">\\n    </app-presentation>\\n\\n</div>\\n\\n<ng-template #staffTemplate>\\n    <h2>Staff Dashboard</h2>\\n\\n    <h3>Course Management</h3>\\n    <p><a routerLink=\\\"/users\\\">Class List</a></p>\\n    <p><a routerLink=\\\"/proofs\\\">Proof List</a></p>\\n</ng-template>\\n\\n<ng-template #noneTemplate>None</ng-template>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userdashboard/userdashboard.component.html\n// module id = ./src/app/userdashboard/userdashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../users.service';\nimport { ProofService } from '../proofs.service';\nimport { PresentationService } from '../presentations.service';\n\n@Component({\n  selector: 'app-userdashboard',\n  templateUrl: './userdashboard.component.html',\n  styleUrls: ['./userdashboard.component.css'],\n  providers: [ UserService, ProofService, PresentationService ]\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private userService:UserService,\n              private proofService:ProofService,\n              private presentationService:PresentationService) { \n  }\n\n  user:any = {'email': ''};  // will be fetched from UserService\n  proofs:any;        // list of all class proofs\n  staff:any;         // list of class staff (who are always listeners)\n  //qualListeners:any; // TODO: add student listeners onto staff options\n  adding:boolean=false;\n\n  // this user's presented & confirmed pres.\n  presented_confirmed:any; \n  num_presented_confirmed = 0;\n \n  // this user's presented & denied pres.\n  presented_denied:any; \n  num_presented_denied = 0;\n\n  // this user's presented & pending pres.\n  presented_pending:any; \n  num_presented_pending = 0;\n\n  // this user's confirmed listened-to pres. \n  listened_confirmed:any;  \n  num_listened_confirmed = 0;\n\n  // this user's pending listened-to pres.\n  listened_pending:any;   \n  num_listened_pending = 0;\n\n  new_presentation = {};\n\n  ngOnInit() {  \n    this.getUser(); \n    this.updateListenedConfirmed();\n    this.updateListenedPending();\n\n    // actually only needed for students - TODO: \"if\"\n    this.updateProofs();\n    this.updateStaff();\n    this.updatePresentedConfirmed();\n    this.updatePresentedDenied();\n    this.updatePresentedPending();\n\n  }\n\n  setAdding(mode):void{\n      this.adding = (mode ? true : false);\n  }\n\n  // reads URL to get correct user's info\n  getUser(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.userService.getUser(id)\n        .subscribe( (user) => {\n          this.user = user;\n        });\n  }\n\n  // FOR ALL USERS\n\n  // gets collection of Presentations\n  updateListenedConfirmed(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.presentationService.getListenedConfirmed(id)\n        .subscribe( (results) => {\n          this.listened_confirmed = results;\n          this.num_listened_confirmed = this.listened_confirmed.length;\n          if (this.num_listened_confirmed) {\n            this.listened_confirmed.sort(this.sortByPresenter);\n          }\n        });\n  }\n\n  // gets collection of Presentations\n  updateListenedPending(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.presentationService.getListenedPending(id)\n        .subscribe( (results) => {\n          this.listened_pending = results;\n          this.num_listened_pending = this.listened_pending.length;\n          if (this.num_listened_pending) {\n            this.listened_pending.sort(this.sortByPresenter);\n          }\n        });\n  }\n\n  // updates both listening groups when a listen is confirmed\n  updateListened() : void {\n      this.updateListenedPending();\n      this.updateListenedConfirmed();\n  }\n\n  // FOR STUDENTS ONLY\n\n  // gets collection of Proofs - TODO: filter out already-presented ones\n  updateProofs(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.proofService.listProofs()\n        .subscribe( (proofs) => {\n          this.proofs = proofs;\n        });\n  }\n\n  // gets collection of staff, who can always listen to any proof\n  // TODO: make an API-side staff-only call\n  updateStaff(): void {\n    this.userService.listUsers()\n        .subscribe( (users) => {\n          this.staff = users;\n          this.staff.sort(this.sortByEmail);\n        });\n  }\n\n  // gets collection of Presentations\n  updatePresentedConfirmed(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.presentationService\n        .getPresentedConfirmed(id)\n        .subscribe( (results) => {\n          this.presented_confirmed = results;\n          this.num_presented_confirmed = this.presented_confirmed.length;\n          if (this.num_presented_confirmed) {\n            this.presented_confirmed.sort(this.sortByProof);\n          }\n        });\n  }\n\n  // gets collection of Presentations\n  updatePresentedDenied(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.presentationService\n        .getPresentedDenied(id)\n        .subscribe( (results) => {\n          this.presented_denied = results;\n          this.num_presented_denied = this.presented_denied.length;\n          if (this.num_presented_denied) {\n            this.presented_denied.sort(this.sortByProof);\n          }\n        });\n  }\n\n  // gets collection of Presentations\n  updatePresentedPending(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.presentationService.getPresentedPending(id)\n        .subscribe( (results) => {\n          this.presented_pending = results;\n          this.num_presented_pending = this.presented_pending.length;\n          if (this.num_presented_pending) {\n            this.presented_pending.sort(this.sortByProof);\n          }\n        });\n  }\n\n  // updates presented group and proofs list when a new pres is registered\n  updatePresented() : void {\n      this.updatePresentedPending();\n      this.updateProofs();\n  }\n\n  sortByEmail(a:any, b:any):number {      \n      if ( a.email.substring(0, a.email.lastIndexOf(\"@\")) \n            < b.email.substring(0, b.email.lastIndexOf(\"@\")) ) {\n          return -1;\n      } else { \n          return 1; \n      }\n  }\n\n  sortByPresenter(a:any, b:any):number {\n      let e1 = a.presenter.email;\n      let e2 = b.presenter.email;         \n      if (e1 == e2) {\n        if (a.proof.name < b.proof.name) {\n            return -1;\n        } else { \n            return 1; \n        }\n      } else {\n        if (e1.substring(0, e1.lastIndexOf(\"@\")) \n              < e2.substring(0, e2.lastIndexOf(\"@\"))) {\n            return -1;\n        } else { \n            return 1; \n        }\n      }\n  }\n\n  sortByProof(a:any, b:any):number {\n      let p1 = a.proof.name;\n      let p2 = b.proof.name; \n      if (p1 == p2) {\n          if (a.listener.email < b.listener.email) {\n              return -1;\n          } else { \n              return 1; \n          }\n      } else {        \n          if (p1 < p2) {\n              return -1;\n          } else { \n              return 1; \n          }\n      }\n  }\n}\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userdashboard/userdashboard.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class UserService {\n\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http:HttpClient) {}\n\n    listUsers() {\n        return this.http.get(this.apiUrl + \"/users\");\n    }\n\n    //TODO:\n    //listUsersStaffOnly() {\n    //    return this.http.get(this.apiUrl + \"/users/staff\");\n    //}\n\n    getUser(id:string) {\n        return this.http.get(this.apiUrl + \"/users/\" + id);\n    }\n\n    addUser(email:string, status:string) {\n        return this.http.post(this.apiUrl + \"/users\", \n                             {'email': email, 'status':status});\n    }\n\n    updateUser(id:string, user:any) {\n        return this.http.put(this.apiUrl + \"/users/\" + id,\n                    {'id': id, 'email': user.email, \n                     'status': user.status, \n                     'availability': user.availability });\n    }\n\n    deleteUser(id:string) {\n        return this.http.delete(this.apiUrl + \"/users/\" + id);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8087/api'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}